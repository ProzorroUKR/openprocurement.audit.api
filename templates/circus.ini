[circus]
check_delay = 5
endpoint = ${options['endpoint']}
pubsub_endpoint = ${options['pubsub_endpoint']}
umask = 002
logoutput = ${parts.buildout.directory}/var/log/circus.log
statsd = ${options['statsd']}

{% if options['couchdb'] %}
[watcher:db]
cmd = couchdb
args = -a ${parts.buildout.directory}/etc/couchdb.ini
priority = 100
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.time_format = ${options['logging_time_format']}
stderr_stream.time_format = ${options['logging_time_format']}
stdout_stream.filename = ${parts.buildout.directory}/var/log/couchdb.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/couchdb.stderr.log

[env:db]
HOME = ${parts.buildout.directory}/var

{% if 'disable_db_resource_watcher' not in options %}
[plugin:db_resource]
use = circus.plugins.resource_watcher.ResourceWatcher
watcher = db
max_mem = 1700M
{% end %}

[plugin:db_http]
use = circus.plugins.http_observer.HttpObserver
restart_on_error = db
check_url = http://${parts['couchdb.ini'].host}:${parts['couchdb.ini'].port}/
{% end %}

[env]
TZ = ${options['timezone']}
{% if 'sandbox_mode' in options and options['sandbox_mode'] %}
SANDBOX_MODE = true
{% end %}

{% if options['webapp'] %}
[watcher:webapp]
cmd = ${parts.buildout.directory}/bin/chaussette --fd $(circus.sockets.web) --backend=gevent paste:${parts['openprocurement.api.ini'].output} --graceful-timeout=${options['graceful_timeout'] if 'graceful_timeout' in options else '60'}
numprocesses = ${options['numprocesses'] if 'numprocesses' in options else '1'}
use_sockets = True
priority = 90
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.time_format = ${options['logging_time_format']}
stderr_stream.time_format = ${options['logging_time_format']}
stdout_stream.filename = ${parts.buildout.directory}/var/log/webapp.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/webapp.stderr.log

{% if 'migration_skip' in options %}
[env:webapp]
MIGRATION_SKIP = True
{% end %}

[socket:web]
host = ${options['web_host']}
port = ${options['web_port']}

[plugin:webapp_process_counter]
use = openprocurement.circus.plugins.catcher.Catcher
watcher = webapp

[plugin:webapp_resource]
use = circus.plugins.resource_watcher.ResourceWatcher
watcher = webapp
max_cpu = 95
max_mem = 400M
{% end %}

{% if options['penstock'] %}
[watcher:penstock]
cmd = ${parts.buildout.directory}/bin/penstock ${parts.buildout.directory}/etc/penstock.yaml
numprocesses = 1
priority = 50
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/penstock.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/penstock.stderr.log
{% if 'log_size' in options %}
stdout_stream.max_bytes = ${options['log_size']}
stderr_stream.max_bytes = ${options['log_size']}
{% end %}
{% if 'backup_count' in options %}
stdout_stream.backup_count = ${options['backup_count']}
stderr_stream.backup_count = ${options['backup_count']}
{% end %}
{% end %}

