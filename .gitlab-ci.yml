image: docker:stable
stages:
  - build
  - setup
  - test
  - docs

variables:
  COUCHDB_USER: op
  COUCHDB_PASSWORD: op
  GIT_STRATEGY: none

Build:
  stage: build
  script:
    - type multiwerf && source <(multiwerf use 1.0 beta)
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)
    - unset WERF_TAG_GIT_BRANCH
    - werf build-and-publish --stages-storage :local --tag-custom ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  only:
    - branches
  tags:
    - shell
  except:
    - schedules
  variables:
    GIT_STRATEGY: fetch

.test:
  image: $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  stage: test
  services:
    - couchdb:1.6
  tags:
    - kube
  only:
    - branches
  dependencies:
    - Build
  script:
    - cd /app
    - pip install -e .[test]
    - echo '127.0.0.1  couchdb' >> /etc/hosts
    - py.test $TESTS_PATH --cov=$COV_PATH --cov-config=$COV_FILE -v --maxfail=1 --color=yes --dist=each
      --tx=popen//id=sand//env:DB_NAME=test_sandbox//env:SANDBOX_MODE=1
      --tx=popen//id=prod//env:DB_NAME=test_prod//env:SANDBOX_MODE=
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'

test_api:
  extends: .test
  variables:
    TESTS_PATH: openprocurement/audit/api/tests
    COV_PATH: openprocurement/audit/api
    COV_FILE: .coveragerc

test_monitoring:
  extends: .test
  variables:
    TESTS_PATH: openprocurement/audit/monitoring/tests
    COV_PATH: openprocurement/audit/monitoring
    COV_FILE: .coveragerc

test_inspection:
  extends: .test
  variables:
    TESTS_PATH: openprocurement/audit/inspection/tests
    COV_PATH: openprocurement/audit/inspection
    COV_FILE: .coveragerc

test_docs:
  extends: .test
  stage: docs
  dependencies:
    - test_api
  script:
    - cd /app
    - pip install -e .[test]
    - echo '127.0.0.1  couchdb' >> /etc/hosts
    - py.test docs.py
  variables:
    TESTS_PATH: openprocurement/audit/inspection/tests
    COV_PATH: openprocurement/audit/inspection
    COV_FILE: .coveragerc

test_setup_py:
  image: python:2.7
  stage: setup
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .eggs/
  variables:
    GIT_STRATEGY: clone
  only:
    - branches
  dependencies:
    - Build
  when: manual
  before_script:
    - apt-get update
    - apt-get install -y libsodium-dev git libevent-dev libzmq-dev libffi-dev libssl-dev gcc
    - echo '127.0.0.1  couchdb' >> /etc/hosts
  script:
    - python setup.py test

