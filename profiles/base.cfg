[buildout]
package-name =
    openprocurement.bot.risk_indicators
    openprocurement.audit.inspection
    openprocurement.audit.api
    openprocurement.api
    openprocurement.tender.core
    openprocurement.circus.plugins
    openprocurement_client
    request_id_middleware

parts =
    scripts
    couchpy
    circus
    circusd
    circusctl
    circus.ini
    couchdb.ini
    openprocurement.api.ini
    risk_indicators_script
    openprocurement.bot.risk_indicators.yaml
    mkdirs
    s3cmd

eggs =
    chaussette
    ${:package-name}

develop = .
index = https://pypi.python.org/simple

[config-from-template]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/${:_buildout_section_name_}
output = ${buildout:directory}/etc/${:_buildout_section_name_}

[scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = python_interpreter
scripts = chaussette

[circus]
recipe = zc.recipe.egg
eggs =
    circus
    openprocurement.circus.plugins
scripts =

[couchpy]
<=circus
eggs = CouchDB
scripts =
    couchpy
    couchdb-replicate

[circusd]
<=circus
initialization =
    sys.argv[1:1] = ('${buildout:directory}/etc/circus.ini').split()
scripts = circusd

[circusctl]
<=circus
initialization =
    sys.argv[1:1] = ('--endpoint ${circus.ini:endpoint}').split()
scripts = circusctl

[circus.ini]
<= config-from-template
couchdb = True
statsd = True
webapp = True
web_port = 6543
web_host = 0.0.0.0
endpoint = ipc://${buildout:directory}/var/circus_endpoint
pubsub_endpoint = ipc://${buildout:directory}/var/circus_pubsub
timezone = Europe/Kiev
logging_time_format = %Y-%m-%d %H:%M:%S

[couchdb.ini]
<= config-from-template
port = 5984
host = 127.0.0.1

[openprocurement.api.ini]
<= config-from-template
couchdb_url = http://${couchdb.ini:host}:${couchdb.ini:port}/
couchdb_db = openprocurement
debug = false
update_after = false
auth_file = ${buildout:directory}/auth.ini
exc_logger = 1
journal = 1
plugins = audit,audit.inspection

[openprocurement.bot.risk_indicators.yaml]
<= config-from-template
risk_indicators_host = http://195.201.111.52:8026/api/v0.1/
monitors_host = https://${circus.ini:web_host}:${circus.ini:web_port}/api/2.4/
monitors_token =

[risk_indicators_script]
recipe = zc.recipe.egg:scripts
eggs = openprocurement.bot.risk_indicators
arguments = 'etc/openprocurement.bot.risk_indicators.yaml'

[s3cmd]
recipe = zc.recipe.egg
scripts = s3cmd

[logrotate.conf]
<= config-from-template
uploader = awscli
host =
region =
logs_bucket =
logs_dir =
aws_access_key = ${openprocurement.api.ini:aws_access_key}
aws_secret_key = ${openprocurement.api.ini:aws_secret_key}

[logrotate-hourly]
recipe = z3c.recipe.usercrontab
times = @hourly
command = /usr/sbin/logrotate --state ${buildout:directory}/var/logrotate.status ${logrotate.conf:output} >>${buildout:directory}/var/log/logrotate.log 2>&1

[mkdirs]
recipe = z3c.recipe.mkdir
paths = ${buildout:directory}/var/log

[autostart]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:directory}/bin/circusd --daemon --pidfile ${buildout:directory}/circus.pid
