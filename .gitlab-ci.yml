image: docker:stable
stages:
  - build
  - deploy
  - test

variables:
  GIT_STRATEGY: none
  MONGODB_ROOT_PASSWORD: example
  MONGODB_REPLICA_SET_MODE: primary
  MONGODB_REPLICA_SET_NAME: rs0
  MONGODB_REPLICA_SET_KEY: replicaSetKey


.build:
  stage: build
  variables:
    IMAGE_TAG: ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    GIT_STRATEGY: fetch
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  tags:
    - kube-dev
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - >
      /kaniko/executor --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $CI_REGISTRY_IMAGE:$IMAGE_TAG
      --registry-mirror $REGISTRY_MIRROR
      --insecure-registry $REGISTRY_MIRROR
      --skip-tls-verify
      --cache=true


build:
  extends: .build
  only:
    - branches
  variables:
    IMAGE_TAG: ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

build_master:
  extends: .build
  only:
    - master
  variables:
    IMAGE_TAG: latest

build_tag:
  extends: .build
  only:
    - tags
  variables:
    IMAGE_TAG: $CI_COMMIT_TAG

.base_deploy: &base_deploy
  stage: deploy
  script:
    - helm3 repo add prozorro $REPO_URL
    - helm3 repo update
    - helm3 upgrade $APP_NAME-$CI_COMMIT_REF_SLUG --install prozorro/$HELM_CHART --namespace $HELM_NAMESPACE --set $HELM_TAG_PARAMETER=$TAG --wait --debug
  tags:
    - shell
  variables:
    APP_NAME: audit-api
    TAG: latest

review:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: start
    url: http://$APP_NAME-${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/monitorings
    on_stop: stop_review
  variables:
    APP_NAME: audit-api
    TAG: ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  dependencies:
    - build
  only:
    - branches
  except:
    - master
    - schedules
  when: manual    

deploy_master:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: http://$APP_NAME-${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/monitorings
  dependencies:
    - build_master
  only:
    - master
  except:
    - schedules

stop_review:
  stage: deploy
  script:
    - helm3 uninstall audit-api-$CI_COMMIT_REF_SLUG
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop
  tags:
    - shell
  only:
    - branches
  except:
    - master
    - schedules
  when: manual

.test:
  image: $CI_REGISTRY_IMAGE:$TAG
  stage: test
  services:
    - name: bitnami/mongodb:4.4.12-debian-10-r24
      alias: mongo
  tags:
    - kube-dev
  only:
    - branches
  except:
    - schedules
  dependencies:
    - build
  variables:
    TAG: ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

.test_main:
  extends: .test
  script:
    - cd /app
    - pip install -e .[test]
    - py.test $TESTS_PATH --cov=$COV_PATH --cov-config=$COV_FILE -v --maxfail=1 --color=yes --dist=each
      --tx=popen//id=sand//env:DB_NAME=test_sandbox//env:SANDBOX_MODE=1
      --tx=popen//id=prod//env:DB_NAME=test_prod//env:SANDBOX_MODE=
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'

test_api:
  extends: .test_main
  variables:
    TESTS_PATH: openprocurement/audit
    COV_PATH: openprocurement/audit
    COV_FILE: .coveragerc

test_docs:
  extends: .test
  before_script:
    - cd /app
    - pip install -e .[test]
  script:
    - py.test docs.py
  when: manual

test_setup_py:
  image: python:3.6-slim-jessie
  stage: test
  services:
    - name: bitnami/mongodb:4.4.12-debian-10-r24
      alias: mongo
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .eggs/
  variables:
    GIT_STRATEGY: clone
  only:
    - branches
  dependencies:
    - build
  when: manual
  before_script:
    - apt-get update
    - apt-get install -y git libzmq-dev libssl-dev gcc
    - pip install --upgrade pip && pip install --no-cache-dir -r requirements.txt
  script:
    - python setup.py test
